/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const t=window.ShadowRoot&&(void 0===window.ShadyCSS||window.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,i=Symbol(),s=new Map;class e{constructor(t,s){if(this._$cssResult$=!0,s!==i)throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=t}get styleSheet(){let i=s.get(this.cssText);return t&&void 0===i&&(s.set(this.cssText,i=new CSSStyleSheet),i.replaceSync(this.cssText)),i}toString(){return this.cssText}}const n=t?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let s="";for(const i of t.cssRules)s+=i.cssText;return(t=>new e("string"==typeof t?t:t+"",i))(s)})(t):t
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */;var o;const r=window.trustedTypes,l=r?r.emptyScript:"",h=window.reactiveElementPolyfillSupport,c={toAttribute(t,i){switch(i){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,i){let s=t;switch(i){case Boolean:s=null!==t;break;case Number:s=null===t?null:Number(t);break;case Object:case Array:try{s=JSON.parse(t)}catch(t){s=null}}return s}},u=(t,i)=>i!==t&&(i==i||t==t),d={attribute:!0,type:String,converter:c,reflect:!1,hasChanged:u};class a extends HTMLElement{constructor(){super(),this._$Et=new Map,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Ei=null,this.o()}static addInitializer(t){var i;null!==(i=this.l)&&void 0!==i||(this.l=[]),this.l.push(t)}static get observedAttributes(){this.finalize();const t=[];return this.elementProperties.forEach(((i,s)=>{const e=this._$Eh(s,i);void 0!==e&&(this._$Eu.set(e,s),t.push(e))})),t}static createProperty(t,i=d){if(i.state&&(i.attribute=!1),this.finalize(),this.elementProperties.set(t,i),!i.noAccessor&&!this.prototype.hasOwnProperty(t)){const s="symbol"==typeof t?Symbol():"__"+t,e=this.getPropertyDescriptor(t,s,i);void 0!==e&&Object.defineProperty(this.prototype,t,e)}}static getPropertyDescriptor(t,i,s){return{get(){return this[i]},set(e){const n=this[t];this[i]=e,this.requestUpdate(t,n,s)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)||d}static finalize(){if(this.hasOwnProperty("finalized"))return!1;this.finalized=!0;const t=Object.getPrototypeOf(this);if(t.finalize(),this.elementProperties=new Map(t.elementProperties),this._$Eu=new Map,this.hasOwnProperty("properties")){const t=this.properties,i=[...Object.getOwnPropertyNames(t),...Object.getOwnPropertySymbols(t)];for(const s of i)this.createProperty(s,t[s])}return this.elementStyles=this.finalizeStyles(this.styles),!0}static finalizeStyles(t){const i=[];if(Array.isArray(t)){const s=new Set(t.flat(1/0).reverse());for(const t of s)i.unshift(n(t))}else void 0!==t&&i.push(n(t));return i}static _$Eh(t,i){const s=i.attribute;return!1===s?void 0:"string"==typeof s?s:"string"==typeof t?t.toLowerCase():void 0}o(){var t;this._$Ep=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$Em(),this.requestUpdate(),null===(t=this.constructor.l)||void 0===t||t.forEach((t=>t(this)))}addController(t){var i,s;(null!==(i=this._$Eg)&&void 0!==i?i:this._$Eg=[]).push(t),void 0!==this.renderRoot&&this.isConnected&&(null===(s=t.hostConnected)||void 0===s||s.call(t))}removeController(t){var i;null===(i=this._$Eg)||void 0===i||i.splice(this._$Eg.indexOf(t)>>>0,1)}_$Em(){this.constructor.elementProperties.forEach(((t,i)=>{this.hasOwnProperty(i)&&(this._$Et.set(i,this[i]),delete this[i])}))}createRenderRoot(){var i;const s=null!==(i=this.shadowRoot)&&void 0!==i?i:this.attachShadow(this.constructor.shadowRootOptions);return((i,s)=>{t?i.adoptedStyleSheets=s.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet)):s.forEach((t=>{const s=document.createElement("style"),e=window.litNonce;void 0!==e&&s.setAttribute("nonce",e),s.textContent=t.cssText,i.appendChild(s)}))})(s,this.constructor.elementStyles),s}connectedCallback(){var t;void 0===this.renderRoot&&(this.renderRoot=this.createRenderRoot()),this.enableUpdating(!0),null===(t=this._$Eg)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostConnected)||void 0===i?void 0:i.call(t)}))}enableUpdating(t){}disconnectedCallback(){var t;null===(t=this._$Eg)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostDisconnected)||void 0===i?void 0:i.call(t)}))}attributeChangedCallback(t,i,s){this._$AK(t,s)}_$ES(t,i,s=d){var e,n;const o=this.constructor._$Eh(t,s);if(void 0!==o&&!0===s.reflect){const r=(null!==(n=null===(e=s.converter)||void 0===e?void 0:e.toAttribute)&&void 0!==n?n:c.toAttribute)(i,s.type);this._$Ei=t,null==r?this.removeAttribute(o):this.setAttribute(o,r),this._$Ei=null}}_$AK(t,i){var s,e,n;const o=this.constructor,r=o._$Eu.get(t);if(void 0!==r&&this._$Ei!==r){const t=o.getPropertyOptions(r),l=t.converter,h=null!==(n=null!==(e=null===(s=l)||void 0===s?void 0:s.fromAttribute)&&void 0!==e?e:"function"==typeof l?l:null)&&void 0!==n?n:c.fromAttribute;this._$Ei=r,this[r]=h(i,t.type),this._$Ei=null}}requestUpdate(t,i,s){let e=!0;void 0!==t&&(((s=s||this.constructor.getPropertyOptions(t)).hasChanged||u)(this[t],i)?(this._$AL.has(t)||this._$AL.set(t,i),!0===s.reflect&&this._$Ei!==t&&(void 0===this._$EC&&(this._$EC=new Map),this._$EC.set(t,s))):e=!1),!this.isUpdatePending&&e&&(this._$Ep=this._$E_())}async _$E_(){this.isUpdatePending=!0;try{await this._$Ep}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){var t;if(!this.isUpdatePending)return;this.hasUpdated,this._$Et&&(this._$Et.forEach(((t,i)=>this[i]=t)),this._$Et=void 0);let i=!1;const s=this._$AL;try{i=this.shouldUpdate(s),i?(this.willUpdate(s),null===(t=this._$Eg)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostUpdate)||void 0===i?void 0:i.call(t)})),this.update(s)):this._$EU()}catch(t){throw i=!1,this._$EU(),t}i&&this._$AE(s)}willUpdate(t){}_$AE(t){var i;null===(i=this._$Eg)||void 0===i||i.forEach((t=>{var i;return null===(i=t.hostUpdated)||void 0===i?void 0:i.call(t)})),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EU(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$Ep}shouldUpdate(t){return!0}update(t){void 0!==this._$EC&&(this._$EC.forEach(((t,i)=>this._$ES(i,this[i],t))),this._$EC=void 0),this._$EU()}updated(t){}firstUpdated(t){}}
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
var v;a.finalized=!0,a.elementProperties=new Map,a.elementStyles=[],a.shadowRootOptions={mode:"open"},null==h||h({ReactiveElement:a}),(null!==(o=globalThis.reactiveElementVersions)&&void 0!==o?o:globalThis.reactiveElementVersions=[]).push("1.3.0");const f=globalThis.trustedTypes,p=f?f.createPolicy("lit-html",{createHTML:t=>t}):void 0,y=`lit$${(Math.random()+"").slice(9)}$`,b="?"+y,g=`<${b}>`,w=document,m=(t="")=>w.createComment(t),S=t=>null===t||"object"!=typeof t&&"function"!=typeof t,$=Array.isArray,C=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,O=/-->/g,j=/>/g,A=/>|[ 	\n\r](?:([^\s"'>=/]+)([ 	\n\r]*=[ 	\n\r]*(?:[^ 	\n\r"'`<>=]|("|')|))|$)/g,_=/'/g,E=/"/g,x=/^(?:script|style|textarea|title)$/i,T=(t=>(i,...s)=>({_$litType$:t,strings:i,values:s}))(1),k=Symbol.for("lit-noChange"),U=Symbol.for("lit-nothing"),M=new WeakMap,N=w.createTreeWalker(w,129,null,!1);class P{constructor({strings:t,_$litType$:i},s){let e;this.parts=[];let n=0,o=0;const r=t.length-1,l=this.parts,[h,c]=((t,i)=>{const s=t.length-1,e=[];let n,o=2===i?"<svg>":"",r=C;for(let i=0;i<s;i++){const s=t[i];let l,h,c=-1,u=0;for(;u<s.length&&(r.lastIndex=u,h=r.exec(s),null!==h);)u=r.lastIndex,r===C?"!--"===h[1]?r=O:void 0!==h[1]?r=j:void 0!==h[2]?(x.test(h[2])&&(n=RegExp("</"+h[2],"g")),r=A):void 0!==h[3]&&(r=A):r===A?">"===h[0]?(r=null!=n?n:C,c=-1):void 0===h[1]?c=-2:(c=r.lastIndex-h[2].length,l=h[1],r=void 0===h[3]?A:'"'===h[3]?E:_):r===E||r===_?r=A:r===O||r===j?r=C:(r=A,n=void 0);const d=r===A&&t[i+1].startsWith("/>")?" ":"";o+=r===C?s+g:c>=0?(e.push(l),s.slice(0,c)+"$lit$"+s.slice(c)+y+d):s+y+(-2===c?(e.push(void 0),i):d)}const l=o+(t[s]||"<?>")+(2===i?"</svg>":"");if(!Array.isArray(t)||!t.hasOwnProperty("raw"))throw Error("invalid template strings array");return[void 0!==p?p.createHTML(l):l,e]})(t,i);if(this.el=P.createElement(h,s),N.currentNode=this.el.content,2===i){const t=this.el.content,i=t.firstChild;i.remove(),t.append(...i.childNodes)}for(;null!==(e=N.nextNode())&&l.length<r;){if(1===e.nodeType){if(e.hasAttributes()){const t=[];for(const i of e.getAttributeNames())if(i.endsWith("$lit$")||i.startsWith(y)){const s=c[o++];if(t.push(i),void 0!==s){const t=e.getAttribute(s.toLowerCase()+"$lit$").split(y),i=/([.?@])?(.*)/.exec(s);l.push({type:1,index:n,name:i[2],strings:t,ctor:"."===i[1]?q:"?"===i[1]?J:"@"===i[1]?W:L})}else l.push({type:6,index:n})}for(const i of t)e.removeAttribute(i)}if(x.test(e.tagName)){const t=e.textContent.split(y),i=t.length-1;if(i>0){e.textContent=f?f.emptyScript:"";for(let s=0;s<i;s++)e.append(t[s],m()),N.nextNode(),l.push({type:2,index:++n});e.append(t[i],m())}}}else if(8===e.nodeType)if(e.data===b)l.push({type:2,index:n});else{let t=-1;for(;-1!==(t=e.data.indexOf(y,t+1));)l.push({type:7,index:n}),t+=y.length-1}n++}}static createElement(t,i){const s=w.createElement("template");return s.innerHTML=t,s}}function R(t,i,s=t,e){var n,o,r,l;if(i===k)return i;let h=void 0!==e?null===(n=s._$Cl)||void 0===n?void 0:n[e]:s._$Cu;const c=S(i)?void 0:i._$litDirective$;return(null==h?void 0:h.constructor)!==c&&(null===(o=null==h?void 0:h._$AO)||void 0===o||o.call(h,!1),void 0===c?h=void 0:(h=new c(t),h._$AT(t,s,e)),void 0!==e?(null!==(r=(l=s)._$Cl)&&void 0!==r?r:l._$Cl=[])[e]=h:s._$Cu=h),void 0!==h&&(i=R(t,h._$AS(t,i.values),h,e)),i}class z{constructor(t,i){this.v=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}p(t){var i;const{el:{content:s},parts:e}=this._$AD,n=(null!==(i=null==t?void 0:t.creationScope)&&void 0!==i?i:w).importNode(s,!0);N.currentNode=n;let o=N.nextNode(),r=0,l=0,h=e[0];for(;void 0!==h;){if(r===h.index){let i;2===h.type?i=new I(o,o.nextSibling,this,t):1===h.type?i=new h.ctor(o,h.name,h.strings,this,t):6===h.type&&(i=new B(o,this,t)),this.v.push(i),h=e[++l]}r!==(null==h?void 0:h.index)&&(o=N.nextNode(),r++)}return n}m(t){let i=0;for(const s of this.v)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class I{constructor(t,i,s,e){var n;this.type=2,this._$AH=U,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cg=null===(n=null==e?void 0:e.isConnected)||void 0===n||n}get _$AU(){var t,i;return null!==(i=null===(t=this._$AM)||void 0===t?void 0:t._$AU)&&void 0!==i?i:this._$Cg}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=R(this,t,i),S(t)?t===U||null==t||""===t?(this._$AH!==U&&this._$AR(),this._$AH=U):t!==this._$AH&&t!==k&&this.$(t):void 0!==t._$litType$?this.T(t):void 0!==t.nodeType?this.k(t):(t=>{var i;return $(t)||"function"==typeof(null===(i=t)||void 0===i?void 0:i[Symbol.iterator])})(t)?this.S(t):this.$(t)}A(t,i=this._$AB){return this._$AA.parentNode.insertBefore(t,i)}k(t){this._$AH!==t&&(this._$AR(),this._$AH=this.A(t))}$(t){this._$AH!==U&&S(this._$AH)?this._$AA.nextSibling.data=t:this.k(w.createTextNode(t)),this._$AH=t}T(t){var i;const{values:s,_$litType$:e}=t,n="number"==typeof e?this._$AC(t):(void 0===e.el&&(e.el=P.createElement(e.h,this.options)),e);if((null===(i=this._$AH)||void 0===i?void 0:i._$AD)===n)this._$AH.m(s);else{const t=new z(n,this),i=t.p(this.options);t.m(s),this.k(i),this._$AH=t}}_$AC(t){let i=M.get(t.strings);return void 0===i&&M.set(t.strings,i=new P(t)),i}S(t){$(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const n of t)e===i.length?i.push(s=new I(this.A(m()),this.A(m()),this,this.options)):s=i[e],s._$AI(n),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){var s;for(null===(s=this._$AP)||void 0===s||s.call(this,!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){var i;void 0===this._$AM&&(this._$Cg=t,null===(i=this._$AP)||void 0===i||i.call(this,t))}}class L{constructor(t,i,s,e,n){this.type=1,this._$AH=U,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=n,s.length>2||""!==s[0]||""!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=U}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(t,i=this,s,e){const n=this.strings;let o=!1;if(void 0===n)t=R(this,t,i,0),o=!S(t)||t!==this._$AH&&t!==k,o&&(this._$AH=t);else{const e=t;let r,l;for(t=n[0],r=0;r<n.length-1;r++)l=R(this,e[s+r],i,r),l===k&&(l=this._$AH[r]),o||(o=!S(l)||l!==this._$AH[r]),l===U?t=U:t!==U&&(t+=(null!=l?l:"")+n[r+1]),this._$AH[r]=l}o&&!e&&this.C(t)}C(t){t===U?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=t?t:"")}}class q extends L{constructor(){super(...arguments),this.type=3}C(t){this.element[this.name]=t===U?void 0:t}}const D=f?f.emptyScript:"";class J extends L{constructor(){super(...arguments),this.type=4}C(t){t&&t!==U?this.element.setAttribute(this.name,D):this.element.removeAttribute(this.name)}}class W extends L{constructor(t,i,s,e,n){super(t,i,s,e,n),this.type=5}_$AI(t,i=this){var s;if((t=null!==(s=R(this,t,i,0))&&void 0!==s?s:U)===k)return;const e=this._$AH,n=t===U&&e!==U||t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive,o=t!==U&&(e===U||n);n&&this.element.removeEventListener(this.name,this,e),o&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){var i,s;"function"==typeof this._$AH?this._$AH.call(null!==(s=null===(i=this.options)||void 0===i?void 0:i.host)&&void 0!==s?s:this.element,t):this._$AH.handleEvent(t)}}class B{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){R(this,t)}}const Z=window.litHtmlPolyfillSupport;
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
var H,K;null==Z||Z(P,I),(null!==(v=globalThis.litHtmlVersions)&&void 0!==v?v:globalThis.litHtmlVersions=[]).push("2.2.0");class F extends a{constructor(){super(...arguments),this.renderOptions={host:this},this._$Dt=void 0}createRenderRoot(){var t,i;const s=super.createRenderRoot();return null!==(t=(i=this.renderOptions).renderBefore)&&void 0!==t||(i.renderBefore=s.firstChild),s}update(t){const i=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Dt=((t,i,s)=>{var e,n;const o=null!==(e=null==s?void 0:s.renderBefore)&&void 0!==e?e:i;let r=o._$litPart$;if(void 0===r){const t=null!==(n=null==s?void 0:s.renderBefore)&&void 0!==n?n:null;o._$litPart$=r=new I(i.insertBefore(m(),t),t,void 0,null!=s?s:{})}return r._$AI(t),r})(i,this.renderRoot,this.renderOptions)}connectedCallback(){var t;super.connectedCallback(),null===(t=this._$Dt)||void 0===t||t.setConnected(!0)}disconnectedCallback(){var t;super.disconnectedCallback(),null===(t=this._$Dt)||void 0===t||t.setConnected(!1)}render(){return k}}F.finalized=!0,F._$litElement$=!0,null===(H=globalThis.litElementHydrateSupport)||void 0===H||H.call(globalThis,{LitElement:F});const V=globalThis.litElementPolyfillSupport;null==V||V({LitElement:F}),(null!==(K=globalThis.litElementVersions)&&void 0!==K?K:globalThis.litElementVersions=[]).push("3.2.0");
/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const G=window.ShadowRoot&&(void 0===window.ShadyCSS||window.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,Q=Symbol();class X{constructor(t,i){if(i!==Q)throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=t}get styleSheet(){return G&&void 0===this.t&&(this.t=new CSSStyleSheet,this.t.replaceSync(this.cssText)),this.t}toString(){return this.cssText}}const Y=new Map,tt=t=>(t=>{let i=Y.get(t);return void 0===i&&Y.set(t,i=new X(t,Q)),i})("string"==typeof t?t:t+""),it=G?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let i="";for(const s of t.cssRules)i+=s.cssText;return tt(i)})(t):t
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */;var st,et,nt,ot;const rt={toAttribute(t,i){switch(i){case Boolean:t=t?"":null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,i){let s=t;switch(i){case Boolean:s=null!==t;break;case Number:s=null===t?null:Number(t);break;case Object:case Array:try{s=JSON.parse(t)}catch(t){s=null}}return s}},lt=(t,i)=>i!==t&&(i==i||t==t),ht={attribute:!0,type:String,converter:rt,reflect:!1,hasChanged:lt};class ct extends HTMLElement{constructor(){super(),this.Πi=new Map,this.Πo=void 0,this.Πl=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this.Πh=null,this.u()}static addInitializer(t){var i;null!==(i=this.v)&&void 0!==i||(this.v=[]),this.v.push(t)}static get observedAttributes(){this.finalize();const t=[];return this.elementProperties.forEach(((i,s)=>{const e=this.Πp(s,i);void 0!==e&&(this.Πm.set(e,s),t.push(e))})),t}static createProperty(t,i=ht){if(i.state&&(i.attribute=!1),this.finalize(),this.elementProperties.set(t,i),!i.noAccessor&&!this.prototype.hasOwnProperty(t)){const s="symbol"==typeof t?Symbol():"__"+t,e=this.getPropertyDescriptor(t,s,i);void 0!==e&&Object.defineProperty(this.prototype,t,e)}}static getPropertyDescriptor(t,i,s){return{get(){return this[i]},set(e){const n=this[t];this[i]=e,this.requestUpdate(t,n,s)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)||ht}static finalize(){if(this.hasOwnProperty("finalized"))return!1;this.finalized=!0;const t=Object.getPrototypeOf(this);if(t.finalize(),this.elementProperties=new Map(t.elementProperties),this.Πm=new Map,this.hasOwnProperty("properties")){const t=this.properties,i=[...Object.getOwnPropertyNames(t),...Object.getOwnPropertySymbols(t)];for(const s of i)this.createProperty(s,t[s])}return this.elementStyles=this.finalizeStyles(this.styles),!0}static finalizeStyles(t){const i=[];if(Array.isArray(t)){const s=new Set(t.flat(1/0).reverse());for(const t of s)i.unshift(it(t))}else void 0!==t&&i.push(it(t));return i}static"Πp"(t,i){const s=i.attribute;return!1===s?void 0:"string"==typeof s?s:"string"==typeof t?t.toLowerCase():void 0}u(){var t;this.Πg=new Promise((t=>this.enableUpdating=t)),this.L=new Map,this.Π_(),this.requestUpdate(),null===(t=this.constructor.v)||void 0===t||t.forEach((t=>t(this)))}addController(t){var i,s;(null!==(i=this.ΠU)&&void 0!==i?i:this.ΠU=[]).push(t),void 0!==this.renderRoot&&this.isConnected&&(null===(s=t.hostConnected)||void 0===s||s.call(t))}removeController(t){var i;null===(i=this.ΠU)||void 0===i||i.splice(this.ΠU.indexOf(t)>>>0,1)}"Π_"(){this.constructor.elementProperties.forEach(((t,i)=>{this.hasOwnProperty(i)&&(this.Πi.set(i,this[i]),delete this[i])}))}createRenderRoot(){var t;const i=null!==(t=this.shadowRoot)&&void 0!==t?t:this.attachShadow(this.constructor.shadowRootOptions);return((t,i)=>{G?t.adoptedStyleSheets=i.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet)):i.forEach((i=>{const s=document.createElement("style");s.textContent=i.cssText,t.appendChild(s)}))})(i,this.constructor.elementStyles),i}connectedCallback(){var t;void 0===this.renderRoot&&(this.renderRoot=this.createRenderRoot()),this.enableUpdating(!0),null===(t=this.ΠU)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostConnected)||void 0===i?void 0:i.call(t)})),this.Πl&&(this.Πl(),this.Πo=this.Πl=void 0)}enableUpdating(t){}disconnectedCallback(){var t;null===(t=this.ΠU)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostDisconnected)||void 0===i?void 0:i.call(t)})),this.Πo=new Promise((t=>this.Πl=t))}attributeChangedCallback(t,i,s){this.K(t,s)}"Πj"(t,i,s=ht){var e,n;const o=this.constructor.Πp(t,s);if(void 0!==o&&!0===s.reflect){const r=(null!==(n=null===(e=s.converter)||void 0===e?void 0:e.toAttribute)&&void 0!==n?n:rt.toAttribute)(i,s.type);this.Πh=t,null==r?this.removeAttribute(o):this.setAttribute(o,r),this.Πh=null}}K(t,i){var s,e,n;const o=this.constructor,r=o.Πm.get(t);if(void 0!==r&&this.Πh!==r){const t=o.getPropertyOptions(r),l=t.converter,h=null!==(n=null!==(e=null===(s=l)||void 0===s?void 0:s.fromAttribute)&&void 0!==e?e:"function"==typeof l?l:null)&&void 0!==n?n:rt.fromAttribute;this.Πh=r,this[r]=h(i,t.type),this.Πh=null}}requestUpdate(t,i,s){let e=!0;void 0!==t&&(((s=s||this.constructor.getPropertyOptions(t)).hasChanged||lt)(this[t],i)?(this.L.has(t)||this.L.set(t,i),!0===s.reflect&&this.Πh!==t&&(void 0===this.Πk&&(this.Πk=new Map),this.Πk.set(t,s))):e=!1),!this.isUpdatePending&&e&&(this.Πg=this.Πq())}async"Πq"(){this.isUpdatePending=!0;try{for(await this.Πg;this.Πo;)await this.Πo}catch(t){Promise.reject(t)}const t=this.performUpdate();return null!=t&&await t,!this.isUpdatePending}performUpdate(){var t;if(!this.isUpdatePending)return;this.hasUpdated,this.Πi&&(this.Πi.forEach(((t,i)=>this[i]=t)),this.Πi=void 0);let i=!1;const s=this.L;try{i=this.shouldUpdate(s),i?(this.willUpdate(s),null===(t=this.ΠU)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostUpdate)||void 0===i?void 0:i.call(t)})),this.update(s)):this.Π$()}catch(t){throw i=!1,this.Π$(),t}i&&this.E(s)}willUpdate(t){}E(t){var i;null===(i=this.ΠU)||void 0===i||i.forEach((t=>{var i;return null===(i=t.hostUpdated)||void 0===i?void 0:i.call(t)})),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}"Π$"(){this.L=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this.Πg}shouldUpdate(t){return!0}update(t){void 0!==this.Πk&&(this.Πk.forEach(((t,i)=>this.Πj(i,this[i],t))),this.Πk=void 0),this.Π$()}updated(t){}firstUpdated(t){}}
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
var ut,dt,at,vt;ct.finalized=!0,ct.elementProperties=new Map,ct.elementStyles=[],ct.shadowRootOptions={mode:"open"},null===(et=(st=globalThis).reactiveElementPlatformSupport)||void 0===et||et.call(st,{ReactiveElement:ct}),(null!==(nt=(ot=globalThis).reactiveElementVersions)&&void 0!==nt?nt:ot.reactiveElementVersions=[]).push("1.0.0-rc.2");const ft=globalThis.trustedTypes,pt=ft?ft.createPolicy("lit-html",{createHTML:t=>t}):void 0,yt=`lit$${(Math.random()+"").slice(9)}$`,bt="?"+yt,gt=`<${bt}>`,wt=document,mt=(t="")=>wt.createComment(t),St=t=>null===t||"object"!=typeof t&&"function"!=typeof t,$t=Array.isArray,Ct=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,Ot=/-->/g,jt=/>/g,At=/>|[ 	\n\r](?:([^\s"'>=/]+)([ 	\n\r]*=[ 	\n\r]*(?:[^ 	\n\r"'`<>=]|("|')|))|$)/g,_t=/'/g,Et=/"/g,xt=/^(?:script|style|textarea)$/i,Tt=(t=>(i,...s)=>({_$litType$:t,strings:i,values:s}))(1),kt=Symbol.for("lit-noChange"),Ut=Symbol.for("lit-nothing"),Mt=new WeakMap,Nt=wt.createTreeWalker(wt,129,null,!1);class Pt{constructor({strings:t,_$litType$:i},s){let e;this.parts=[];let n=0,o=0;const r=t.length-1,l=this.parts,[h,c]=((t,i)=>{const s=t.length-1,e=[];let n,o=2===i?"<svg>":"",r=Ct;for(let i=0;i<s;i++){const s=t[i];let l,h,c=-1,u=0;for(;u<s.length&&(r.lastIndex=u,h=r.exec(s),null!==h);)u=r.lastIndex,r===Ct?"!--"===h[1]?r=Ot:void 0!==h[1]?r=jt:void 0!==h[2]?(xt.test(h[2])&&(n=RegExp("</"+h[2],"g")),r=At):void 0!==h[3]&&(r=At):r===At?">"===h[0]?(r=null!=n?n:Ct,c=-1):void 0===h[1]?c=-2:(c=r.lastIndex-h[2].length,l=h[1],r=void 0===h[3]?At:'"'===h[3]?Et:_t):r===Et||r===_t?r=At:r===Ot||r===jt?r=Ct:(r=At,n=void 0);const d=r===At&&t[i+1].startsWith("/>")?" ":"";o+=r===Ct?s+gt:c>=0?(e.push(l),s.slice(0,c)+"$lit$"+s.slice(c)+yt+d):s+yt+(-2===c?(e.push(void 0),i):d)}const l=o+(t[s]||"<?>")+(2===i?"</svg>":"");return[void 0!==pt?pt.createHTML(l):l,e]})(t,i);if(this.el=Pt.createElement(h,s),Nt.currentNode=this.el.content,2===i){const t=this.el.content,i=t.firstChild;i.remove(),t.append(...i.childNodes)}for(;null!==(e=Nt.nextNode())&&l.length<r;){if(1===e.nodeType){if(e.hasAttributes()){const t=[];for(const i of e.getAttributeNames())if(i.endsWith("$lit$")||i.startsWith(yt)){const s=c[o++];if(t.push(i),void 0!==s){const t=e.getAttribute(s.toLowerCase()+"$lit$").split(yt),i=/([.?@])?(.*)/.exec(s);l.push({type:1,index:n,name:i[2],strings:t,ctor:"."===i[1]?qt:"?"===i[1]?Dt:"@"===i[1]?Jt:Lt})}else l.push({type:6,index:n})}for(const i of t)e.removeAttribute(i)}if(xt.test(e.tagName)){const t=e.textContent.split(yt),i=t.length-1;if(i>0){e.textContent=ft?ft.emptyScript:"";for(let s=0;s<i;s++)e.append(t[s],mt()),Nt.nextNode(),l.push({type:2,index:++n});e.append(t[i],mt())}}}else if(8===e.nodeType)if(e.data===bt)l.push({type:2,index:n});else{let t=-1;for(;-1!==(t=e.data.indexOf(yt,t+1));)l.push({type:7,index:n}),t+=yt.length-1}n++}}static createElement(t,i){const s=wt.createElement("template");return s.innerHTML=t,s}}function Rt(t,i,s=t,e){var n,o,r,l;if(i===kt)return i;let h=void 0!==e?null===(n=s.Σi)||void 0===n?void 0:n[e]:s.Σo;const c=St(i)?void 0:i._$litDirective$;return(null==h?void 0:h.constructor)!==c&&(null===(o=null==h?void 0:h.O)||void 0===o||o.call(h,!1),void 0===c?h=void 0:(h=new c(t),h.T(t,s,e)),void 0!==e?(null!==(r=(l=s).Σi)&&void 0!==r?r:l.Σi=[])[e]=h:s.Σo=h),void 0!==h&&(i=Rt(t,h.S(t,i.values),h,e)),i}class zt{constructor(t,i){this.l=[],this.N=void 0,this.D=t,this.M=i}u(t){var i;const{el:{content:s},parts:e}=this.D,n=(null!==(i=null==t?void 0:t.creationScope)&&void 0!==i?i:wt).importNode(s,!0);Nt.currentNode=n;let o=Nt.nextNode(),r=0,l=0,h=e[0];for(;void 0!==h;){if(r===h.index){let i;2===h.type?i=new It(o,o.nextSibling,this,t):1===h.type?i=new h.ctor(o,h.name,h.strings,this,t):6===h.type&&(i=new Wt(o,this,t)),this.l.push(i),h=e[++l]}r!==(null==h?void 0:h.index)&&(o=Nt.nextNode(),r++)}return n}v(t){let i=0;for(const s of this.l)void 0!==s&&(void 0!==s.strings?(s.I(t,s,i),i+=s.strings.length-2):s.I(t[i])),i++}}class It{constructor(t,i,s,e){this.type=2,this.N=void 0,this.A=t,this.B=i,this.M=s,this.options=e}setConnected(t){var i;null===(i=this.P)||void 0===i||i.call(this,t)}get parentNode(){return this.A.parentNode}get startNode(){return this.A}get endNode(){return this.B}I(t,i=this){t=Rt(this,t,i),St(t)?t===Ut||null==t||""===t?(this.H!==Ut&&this.R(),this.H=Ut):t!==this.H&&t!==kt&&this.m(t):void 0!==t._$litType$?this._(t):void 0!==t.nodeType?this.$(t):(t=>{var i;return $t(t)||"function"==typeof(null===(i=t)||void 0===i?void 0:i[Symbol.iterator])})(t)?this.g(t):this.m(t)}k(t,i=this.B){return this.A.parentNode.insertBefore(t,i)}$(t){this.H!==t&&(this.R(),this.H=this.k(t))}m(t){const i=this.A.nextSibling;null!==i&&3===i.nodeType&&(null===this.B?null===i.nextSibling:i===this.B.previousSibling)?i.data=t:this.$(wt.createTextNode(t)),this.H=t}_(t){var i;const{values:s,_$litType$:e}=t,n="number"==typeof e?this.C(t):(void 0===e.el&&(e.el=Pt.createElement(e.h,this.options)),e);if((null===(i=this.H)||void 0===i?void 0:i.D)===n)this.H.v(s);else{const t=new zt(n,this),i=t.u(this.options);t.v(s),this.$(i),this.H=t}}C(t){let i=Mt.get(t.strings);return void 0===i&&Mt.set(t.strings,i=new Pt(t)),i}g(t){$t(this.H)||(this.H=[],this.R());const i=this.H;let s,e=0;for(const n of t)e===i.length?i.push(s=new It(this.k(mt()),this.k(mt()),this,this.options)):s=i[e],s.I(n),e++;e<i.length&&(this.R(s&&s.B.nextSibling,e),i.length=e)}R(t=this.A.nextSibling,i){var s;for(null===(s=this.P)||void 0===s||s.call(this,!1,!0,i);t&&t!==this.B;){const i=t.nextSibling;t.remove(),t=i}}}class Lt{constructor(t,i,s,e,n){this.type=1,this.H=Ut,this.N=void 0,this.V=void 0,this.element=t,this.name=i,this.M=e,this.options=n,s.length>2||""!==s[0]||""!==s[1]?(this.H=Array(s.length-1).fill(Ut),this.strings=s):this.H=Ut}get tagName(){return this.element.tagName}I(t,i=this,s,e){const n=this.strings;let o=!1;if(void 0===n)t=Rt(this,t,i,0),o=!St(t)||t!==this.H&&t!==kt,o&&(this.H=t);else{const e=t;let r,l;for(t=n[0],r=0;r<n.length-1;r++)l=Rt(this,e[s+r],i,r),l===kt&&(l=this.H[r]),o||(o=!St(l)||l!==this.H[r]),l===Ut?t=Ut:t!==Ut&&(t+=(null!=l?l:"")+n[r+1]),this.H[r]=l}o&&!e&&this.W(t)}W(t){t===Ut?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=t?t:"")}}class qt extends Lt{constructor(){super(...arguments),this.type=3}W(t){this.element[this.name]=t===Ut?void 0:t}}class Dt extends Lt{constructor(){super(...arguments),this.type=4}W(t){t&&t!==Ut?this.element.setAttribute(this.name,""):this.element.removeAttribute(this.name)}}class Jt extends Lt{constructor(){super(...arguments),this.type=5}I(t,i=this){var s;if((t=null!==(s=Rt(this,t,i,0))&&void 0!==s?s:Ut)===kt)return;const e=this.H,n=t===Ut&&e!==Ut||t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive,o=t!==Ut&&(e===Ut||n);n&&this.element.removeEventListener(this.name,this,e),o&&this.element.addEventListener(this.name,this,t),this.H=t}handleEvent(t){var i,s;"function"==typeof this.H?this.H.call(null!==(s=null===(i=this.options)||void 0===i?void 0:i.host)&&void 0!==s?s:this.element,t):this.H.handleEvent(t)}}class Wt{constructor(t,i,s){this.element=t,this.type=6,this.N=void 0,this.V=void 0,this.M=i,this.options=s}I(t){Rt(this,t)}}
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
var Bt,Zt,Ht,Kt,Ft,Vt;null===(dt=(ut=globalThis).litHtmlPlatformSupport)||void 0===dt||dt.call(ut,Pt,It),(null!==(at=(vt=globalThis).litHtmlVersions)&&void 0!==at?at:vt.litHtmlVersions=[]).push("2.0.0-rc.3"),(null!==(Bt=(Vt=globalThis).litElementVersions)&&void 0!==Bt?Bt:Vt.litElementVersions=[]).push("3.0.0-rc.2");class Gt extends ct{constructor(){super(...arguments),this.renderOptions={host:this},this.Φt=void 0}createRenderRoot(){var t,i;const s=super.createRenderRoot();return null!==(t=(i=this.renderOptions).renderBefore)&&void 0!==t||(i.renderBefore=s.firstChild),s}update(t){const i=this.render();super.update(t),this.Φt=((t,i,s)=>{var e,n;const o=null!==(e=null==s?void 0:s.renderBefore)&&void 0!==e?e:i;let r=o._$litPart$;if(void 0===r){const t=null!==(n=null==s?void 0:s.renderBefore)&&void 0!==n?n:null;o._$litPart$=r=new It(i.insertBefore(mt(),t),t,void 0,s)}return r.I(t),r})(i,this.renderRoot,this.renderOptions)}connectedCallback(){var t;super.connectedCallback(),null===(t=this.Φt)||void 0===t||t.setConnected(!0)}disconnectedCallback(){var t;super.disconnectedCallback(),null===(t=this.Φt)||void 0===t||t.setConnected(!1)}render(){return kt}}function Qt(t,[i,s]){return i.toLowerCase()!==i?t[i]=Object.assign(Object.assign({},s),{attribute:i.replace(/[A-Z]/g,"-$&").toLowerCase()}):t[i]=s,t}function Xt(t){return"boolean"==typeof t?{type:Boolean}:Array.isArray(t)?{type:Array}:"object"==typeof t?{type:Object}:{}}Gt.finalized=!0,Gt._$litElement$=!0,null===(Ht=(Zt=globalThis).litElementHydrateSupport)||void 0===Ht||Ht.call(Zt,{LitElement:Gt}),null===(Ft=(Kt=globalThis).litElementPlatformSupport)||void 0===Ft||Ft.call(Kt,{LitElement:Gt});const Yt=t=>(t=>void 0!==t&&void 0!==t.props)(t)?(t.props||[]).reduce(((t,i)=>(Object.entries(i).forEach((i=>t=Qt(t,i))),t)),{}):(t=>{return i=t||{},Object.entries(i).reduce(((t,[i,s])=>Qt(t,[i,Xt(s)])),{});var i})(null==t?void 0:t.defaults),ti={},ii=(t,i,s)=>{if(ti[t])return ti[t];customElements.define(t,class extends Gt{constructor(){super(),this.content=Tt``,(t=>void 0!==t&&void 0!==t.defaults)(s)&&Object.entries(s.defaults).forEach((([t,i])=>{this[t]=i}))}static get properties(){return Yt(s)}static get styles(){return null==s?void 0:s.styles}async performUpdate(){return this.content=await Promise.resolve(i(this)),super.performUpdate()}render(){return this.content}});const e=document.createElement(t);return ti[t]=e,e};var si="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},ei={},ni={},oi={};Object.defineProperty(oi,"t",{value:!0}),oi.shallowClone=void 0,oi.shallowClone=function(t){return"object"!=typeof t||!t||t instanceof Date||t instanceof RegExp?t:Array.isArray(t)?[...t]:Object.assign({},t)};var ri={};function li(t){if(!t.dispatchEvent||!t.requestUpdate)throw new Error("Element missing required functions (dispatchEvent/requestUpdate)");return t}Object.defineProperty(ri,"t",{value:!0}),ri.withWorkflow=ri.withReducer=ri.withState=ri.decorate=ri.asUpdateableLitElement=void 0,ri.asUpdateableLitElement=li;const hi="__registered_states";function ci(t){const i=t;if(i[hi])return i;const s=li(t),e=s.updated;return i[hi]={index:0,count:0,states:[],reducers:[],workflows:[]},s.updated=t=>(i[hi].index=0,e(t)),i}ri.decorate=ci,ri.withState=function(t,i,s={}){const e=ci(t),{index:n,count:o}=e[hi];return n===o?(e[hi].index++,e[hi].count++,e[hi].states.push(i),i):(e[hi].index++,s.updateDefault&&e[hi].states[n].inject(i.get()),e[hi].states[n])},ri.withReducer=function(t,i){const s=ci(t),{index:e,count:n,reducers:o}=s[hi];return e!==n||o[e-1]?s[hi].reducers[e-1]:(s[hi].reducers[e-1]=i,i)},ri.withWorkflow=function(t,i){const s=ci(t),{index:e,count:n,workflows:o}=s[hi];return e!==n||o[e-1]?s[hi].workflows[e-1]:(s[hi].workflows[e-1]=i,i)};var ui=si&&si.o||function(t,i,s,e){return new(s||(s=Promise))((function(n,o){function r(t){try{h(e.next(t))}catch(t){o(t)}}function l(t){try{h(e.throw(t))}catch(t){o(t)}}function h(t){var i;t.done?n(t.value):(i=t.value,i instanceof s?i:new s((function(t){t(i)}))).then(r,l)}h((e=e.apply(t,i||[])).next())}))};Object.defineProperty(ni,"t",{value:!0}),ni.useState=void 0;const di=oi,ai=ri;ni.useState=(t,i,s={})=>{let e=(0,di.shallowClone)(i);const n=[()=>ui(void 0,void 0,void 0,(function*(){return t.requestUpdate(),yield t.updateComplete}))],o=t=>ui(void 0,void 0,void 0,(function*(){if(e!==t){e=(0,di.shallowClone)(t);for(const t of n)yield t(e)}}));return(0,ai.withState)(t,new class{set value(t){o(t)}get value(){return e}publish(t){o(t)}set(t){return ui(this,void 0,void 0,(function*(){yield o(t)}))}subscribe(t){n.push(t)}inject(t){e=t}get(){return e}getState(){return e}},s)};var vi={},fi=si&&si.o||function(t,i,s,e){return new(s||(s=Promise))((function(n,o){function r(t){try{h(e.next(t))}catch(t){o(t)}}function l(t){try{h(e.throw(t))}catch(t){o(t)}}function h(t){var i;t.done?n(t.value):(i=t.value,i instanceof s?i:new s((function(t){t(i)}))).then(r,l)}h((e=e.apply(t,i||[])).next())}))};Object.defineProperty(vi,"t",{value:!0}),vi.useReducer=void 0;const pi=ni,yi=ri;vi.useReducer=(t,i,s,e={})=>{const{get:n,set:o}=(0,pi.useState)(t,s,e),r=[],l=(s,l)=>fi(void 0,void 0,void 0,(function*(){const h=i(n());return h[s]&&(yield o(yield h[s](l)),r.forEach((t=>t(s,n()))),e.dispatchEvent&&t.dispatchEvent(new CustomEvent(s,{detail:n()}))),n()}));return(0,yi.withReducer)(t,{get:n,subscribe:t=>r.push(t),when:(t,i)=>r.push(((s,e)=>s===t&&i(e))),set:l,dispatch:l})};var bi={},gi=si&&si.o||function(t,i,s,e){return new(s||(s=Promise))((function(n,o){function r(t){try{h(e.next(t))}catch(t){o(t)}}function l(t){try{h(e.throw(t))}catch(t){o(t)}}function h(t){var i;t.done?n(t.value):(i=t.value,i instanceof s?i:new s((function(t){t(i)}))).then(r,l)}h((e=e.apply(t,i||[])).next())}))};Object.defineProperty(bi,"t",{value:!0}),bi.useWorkflow=void 0;const wi=ei,mi=ri;bi.useWorkflow=(t,i)=>{const s=Object.entries(i).reduce(((i,[s,{reducer:e,initialState:n}])=>(i[s]=(0,wi.useReducer)(t,e,n),i)),{}),e={},n={},o=[],r=t=>(o.push({type:"projections",args:[t]}),s[t]?s[t].get():void 0);return(0,mi.withWorkflow)(t,{addActivity:(t,i)=>gi(void 0,void 0,void 0,(function*(){var n,r;o.push({type:"addActivity",args:[t,i]}),yield Promise.all(null!==(r=null===(n=e[t])||void 0===n?void 0:n.map((t=>t(i))))&&void 0!==r?r:[]);for(const e of Object.values(s))yield e.dispatch(t,i)})),addSideeffect:(t,i)=>{o.push({type:"addSideeffect",args:[t,i]}),e[t]=[...e[t]||[],i]},projections:r,addCompensation:(t,i)=>{o.push({type:"addCompensation",args:[t,i]}),n[t]=[...n[t]||[],i]},compensate:()=>gi(void 0,void 0,void 0,(function*(){o.push({type:"compensate",args:[]});for(const[t,i]of Object.entries(n))for(const e of i)for(const i of Object.values(s))yield i.dispatch(t,e)})),after:(t,i,s)=>{o.push({type:"after",args:[t,i,s]});const e=()=>gi(void 0,void 0,void 0,(function*(){o.some((t=>((t,i)=>{if(t.type!==i.type)return!1;for(let s=0;s<i.args.length;s++)if(t.args[s]!==i.args[s])return!1;return!0})(t,i)))||(new Date(Date.now())>t?yield s():setTimeout(e,100))}));e()},plan:t=>gi(void 0,void 0,void 0,(function*(){for(const[s,e]of Object.entries(t))if(i[s]&&JSON.stringify(r(s))===JSON.stringify(i[s].initialState))return yield e();return t[""]?yield t[""]():Promise.resolve(null)})),history:()=>[...o]})},function(t){Object.defineProperty(t,"t",{value:!0}),t.useWorkflow=t.useReducer=t.useState=void 0;var i=ni;Object.defineProperty(t,"useState",{enumerable:!0,get:function(){return i.useState}});var s=vi;Object.defineProperty(t,"useReducer",{enumerable:!0,get:function(){return s.useReducer}});var e=bi;Object.defineProperty(t,"useWorkflow",{enumerable:!0,get:function(){return e.useWorkflow}})}(ei);var Si={},$i={},Ci={};function Oi(t){if(!t.dispatchEvent||!t.requestUpdate)throw new Error("Element missing required functions (dispatchEvent/requestUpdate)");return t}Object.defineProperty(Ci,"t",{value:!0}),Ci.withEffect=Ci.decorate=Ci.asUpdateableLitElement=void 0,Ci.asUpdateableLitElement=Oi;const ji="__registered_effects";function Ai(t){const i=t;if(i[ji])return i;const s=Oi(t),e=s.updated;return i[ji]={index:0,count:0,effects:[]},s.updated=t=>(i[ji].index=0,e(t)),i}Ci.decorate=Ai,Ci.withEffect=function(t,i){const s=Ai(t),{index:e,count:n}=s[ji];return e===n?(s[ji].index++,s[ji].count++,s[ji].effects.push(i),i):(s[ji].index++,s[ji].effects[e])},Object.defineProperty($i,"t",{value:!0}),$i.useOnce=$i.useEffect=void 0;const _i=Ci;function Ei(t,i,s){const e=(0,_i.withEffect)(t,{on:i,observe:["__initial__dirty"]});e.observe.some(((t,i)=>s[i]!==t))&&e.on(),e.observe=s}$i.useEffect=Ei,$i.useOnce=(t,i)=>Ei(t,i,[]),function(t){Object.defineProperty(t,"t",{value:!0}),t.useOnce=t.useEffect=void 0;var i=$i;Object.defineProperty(t,"useEffect",{enumerable:!0,get:function(){return i.useEffect}}),Object.defineProperty(t,"useOnce",{enumerable:!0,get:function(){return i.useOnce}})}(Si);var xi=ei.useReducer,Ti=ei.useState;const ki=t=>({update:t=>Promise.resolve(t),add:()=>Promise.resolve(t)});ii("todo-list",(t=>T`<ul>
    ${t.items.map((i=>T`<li @click=${()=>t.dispatchEvent(new CustomEvent("remove",{detail:i}))}>${i}</li>`))}
  </ul>`),{styles:[((t,...s)=>{const n=1===t.length?t[0]:s.reduce(((i,s,e)=>i+(t=>{if(!0===t._$cssResult$)return t.cssText;if("number"==typeof t)return t;throw Error("Value passed to 'css' function must be a 'css' function result: "+t+". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.")})(s)+t[e+1]),t[0]);return new e(n,i)})`
        ul {
          padding: 0;
          margin: 1rem 0;
          list-style: none;
          overflow: hidden;
        }
        li {
          background-color:inherit;
          padding: .5em;
          border-bottom: solid 1px var(--colorFocus);
          color: var(--colorContrast);
          font-style: italic;
          cursor: pointer;
          transition: all 500ms;
        }
        li:hover {
          background-color:var(--colorShow);
        }
      `],defaults:{items:[]}}),ii("todo-add",(t=>{const{get:i,set:s}=xi(t,ki,"",{dispatchEvent:!0}),e=async()=>i().length>0&&(await s("add"),await s("update",""));return T`
    <input
      type="text"
      name="item"
      .value="${i()}"
      @input="${t=>(async({value:t})=>await s("update",t))(t.target)}"
      @keypress="${t=>"Enter"===t.key&&e()}"
      placeholder="insert new item"
    />
    <button @click=${()=>e()}>
      Add Item
    </button>
  `})),ii("todo-app",(t=>{const{get:i,set:s}=Ti(t,[]);return T`
    <div>
      <todo-add @add=${t=>s([...i(),t.detail])}></todo-add>
    </div>
    <div>
      <todo-list
        .items=${i()}
        @remove=${t=>s([...i().filter((i=>i!==t.detail))])}
      ></todo-list>
    </div>
  `}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
